2021/1/3
一、设计心得：
1.具体类的向上扩展和水平扩展。
2.没有完美的设计模式，需要和具体实现、以及legacy code做一个妥协。


二、重构心得
Refactory principles
1.single responsibility 
2.decouple data or functions.
3.reduce code duplicacy.
4.reduce branch and nesting.
5.Improve the code readability,testablity,extensiblity by reduce code nesting,complexity and branches.

Other Furture refactory possiblity： 
1.remove lazy classes
2.reduce the use of pointers.
3.reduce the use of Singleton pattern.

三、具体工作。
1.Analyse legacy code and external alarm functions.
2.Design the draft refactory plan and draw the class relation diagram.
3.Join and discuss the plan and record a final design diagram.
4.Write the base alarm class and review the factory code.
5.Discuss the debug problems.

Redundancy.
1.Complete to reaad analyse Redundany code.
2.Propose a draft detail plan for supporting redundancy alarm when the present board can't build redundancy with the peer board.
 The main two cases:
 a.Both plugged in or present at the same time,the active Nt board has to be choosen by negotiation.After selection both the selected active need a check on the standy board variant number and board hardware capatbity consistency such as switch speed,clock type etc.
 b.One is active.In this case,the active need to check the peer variant number and board hardware capatbity consistency.
 c.In a and b,if both boards' hardware capability is inconsistent,report alarm to logic on the active NT board.
 
 
 Module External Alarm Refactory
Motif: 
improve the code readability,testablity,extensiblity by reduce code nesting,complexity and branches.
Primary principles during refactory: 
a.single responsibility 
b.decouple data or functions.
c.reduce code duplicacy.
d.reduce branch and nesting.
Actions:
1.	Analyse legacy code and external alarm functions,Design the draft refactory plan and draw the class relation diagram.
2.	Join and discuss the plan and come to a final detail design plan.
3.	Write the base alarm class and input class and review the factory code,discuss and fix the debug problems.

Redundancy study and Alarming Feature 
1.Completed to read and analyse redundany code and part of sw aggregator-app,eqpt-hwa-app.
2.Propose a draft detail plan for supporting redundancy alarm if the peer board can’t redundant with the present board.
3.User cases analysis
 a.Both plugged in or present at the same time,the active Nt board has to be choosen by negotiation.After selection both the selected active need a check on the standy board variant number and board hardware capatbity consistency such as switch speed,clock type etc.
 b.One is active.In this case,the active need to check the peer variant number and board hardware capatbity consistency.
 c.In a and b,if both boards' hardware capability is inconsistent,report alarm to logic on the active NT board.

Further study and work:
1.	Eqpt-aggr-hwa-app,confd.
2.	Redundancy Alarming.

Other furture refactory possiblity： 
1.remove lazy classes
2.reduce the use of pointers.
3.reduce the use of Singleton pattern.

 
  


